先是未post数据的页面输出，有两个input：uname和pwd。


下面就是post数据的检查，这里不是狭义上的过滤，仅仅是检查，检查到敏感字符就输出“水可载舟，亦可赛艇！”，结束。
主要检查"and""select""from""where""union""join""sleep""benchmark"",""("")"这些sql中常用到的东西。


再下面就是数据连接、查询和比较再输出了。


数据库连接这块没什么说的。接着就是将$_POST['uname']直接代入sql查询interest表。验证查询结果是否一行，如果是将查询结果的pwd列值与$_POST['pwd']比较，如相同则输出FLAG。
程序似乎挺简单，逻辑也明了清楚。要得到flag，得过两个条件判断：mysql_num_rows($query) == 1 和$key['pwd'] == $_POST['pwd']。
相信有个别人，代码都不看就直接拿出sqlmap，看完代码，不建议这样做，收益甚微啊。看看输入检查就知道了。
试想如果用union select控制查询结果，那$key['pwd']和$_POST['pwd']就都在我们的控制之中了，但这条路的关键在于过输入检查。我手动试了很多方法，尝试过输入检查，发现徒劳。再看看代码，想想也是，这么个检查方法，似乎过不了检查的。
于是重新调整战略。我们要的是过两个条件判断，从这入手其实第一个条件判断很好过：x' or 1 limit 1#，这就过了第一个检查。


再看第二个检查$key['pwd'] == $_POST['pwd']。由于数据库中数据我们是无法获得的，至少我获取不了。想过这个条件只有控制了$key['pwd']才有可能。我摸索了很长时间，几乎快放弃了，询问了pcat此处是否有可为。答案是肯定的，又给了点提示。最后确定目标使$key['pwd']为NULL。可是输入检查很严，去了逗号，括号等。为达到目标，我翻看mysql的手册。过程漫长又非因缺思汀。早饭过程中脑子中一直过手册内容。早饭过后，就想到了可利用之处。group by with rollup。
x'or 1 group by pwd with rollup #

如图，在我本地的数据中试了下，返回中加了一行，且pwd为NULL。

剩下的就是取出这条记录了。所以完整payload为：
x'or 1 group by pwd with rollup limit 1 OFFSET 2#